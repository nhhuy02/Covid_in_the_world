<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20233.23.1017.0948                               -->
<workbook original-version='18.1' source-build='2023.3.0 (20233.23.1017.0948)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Sheet1 (covid_data)' inline='true' name='federated.0e9cz0j1edl4p417ccy1l14mh4l0' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='covid_data' name='excel-direct.0el4vdm15lytsa11hfv3d04k0r43'>
            <connection class='excel-direct' cleaning='yes' compat='no' dataRefreshTime='' filename='D:/Data Analyst/Portfolio/Corona Virus World/covid_data.xlsx' interpretationMode='1' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0el4vdm15lytsa11hfv3d04k0r43' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:M229:no:A1:M229:1' header='yes' lost='0' outcome='1' processed='2736'>
            <column datatype='string' name='country_name' ordinal='0' />
            <column datatype='integer' name='cases' ordinal='1' />
            <column datatype='integer' name='deaths' ordinal='2' />
            <column datatype='integer' name='region' ordinal='3' />
            <column datatype='integer' name='total_recovered' ordinal='4' />
            <column datatype='integer' name='new_deaths' ordinal='5' />
            <column datatype='integer' name='new_cases' ordinal='6' />
            <column datatype='integer' name='serious_critical' ordinal='7' />
            <column datatype='integer' name='active_cases' ordinal='8' />
            <column datatype='integer' name='total_cases_per_1m_population' ordinal='9' />
            <column datatype='integer' name='deaths_per_1m_population' ordinal='10' />
            <column datatype='integer' name='total_tests' ordinal='11' />
            <column datatype='integer' name='tests_per_1m_population' ordinal='12' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0el4vdm15lytsa11hfv3d04k0r43' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:M229:no:A1:M229:1' header='yes' lost='0' outcome='1' processed='2736'>
            <column datatype='string' name='country_name' ordinal='0' />
            <column datatype='integer' name='cases' ordinal='1' />
            <column datatype='integer' name='deaths' ordinal='2' />
            <column datatype='integer' name='region' ordinal='3' />
            <column datatype='integer' name='total_recovered' ordinal='4' />
            <column datatype='integer' name='new_deaths' ordinal='5' />
            <column datatype='integer' name='new_cases' ordinal='6' />
            <column datatype='integer' name='serious_critical' ordinal='7' />
            <column datatype='integer' name='active_cases' ordinal='8' />
            <column datatype='integer' name='total_cases_per_1m_population' ordinal='9' />
            <column datatype='integer' name='deaths_per_1m_population' ordinal='10' />
            <column datatype='integer' name='total_tests' ordinal='11' />
            <column datatype='integer' name='tests_per_1m_population' ordinal='12' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:M229:no:A1:M229:1&quot;</attribute>
              <attribute datatype='integer' name='lost'>0</attribute>
              <attribute datatype='integer' name='outcome'>1</attribute>
              <attribute datatype='integer' name='processed'>2736</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[country_name]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>country_name</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_46BDB128717640EA8759C0BC8995CB65]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[cases]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>cases</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_46BDB128717640EA8759C0BC8995CB65]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[deaths]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>deaths</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_46BDB128717640EA8759C0BC8995CB65]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>region</remote-name>
            <remote-type>20</remote-type>
            <local-name>[region]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>region</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_46BDB128717640EA8759C0BC8995CB65]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_recovered</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_recovered]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_recovered</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_46BDB128717640EA8759C0BC8995CB65]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_deaths]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>new_deaths</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_46BDB128717640EA8759C0BC8995CB65]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_cases]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>new_cases</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_46BDB128717640EA8759C0BC8995CB65]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>serious_critical</remote-name>
            <remote-type>20</remote-type>
            <local-name>[serious_critical]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>serious_critical</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_46BDB128717640EA8759C0BC8995CB65]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>active_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[active_cases]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>active_cases</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_46BDB128717640EA8759C0BC8995CB65]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases_per_1m_population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_cases_per_1m_population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_cases_per_1m_population</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_46BDB128717640EA8759C0BC8995CB65]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deaths_per_1m_population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[deaths_per_1m_population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>deaths_per_1m_population</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_46BDB128717640EA8759C0BC8995CB65]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_tests</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_tests]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_tests</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_46BDB128717640EA8759C0BC8995CB65]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tests_per_1m_population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[tests_per_1m_population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>tests_per_1m_population</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_46BDB128717640EA8759C0BC8995CB65]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Calculation1' datatype='integer' name='[Calculation_336925580457107461]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([new_deaths])' />
      </column>
      <column caption='Total Cases' datatype='integer' name='[Calculation_336925580457594886]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([cases])' />
      </column>
      <column caption='Total Tests' datatype='integer' name='[Calculation_336925580457943048]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([total_tests])' />
      </column>
      <column caption='Total Recovered' datatype='integer' name='[Calculation_336925580458209289]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([total_recovered])' />
      </column>
      <column caption='Total Deaths' datatype='integer' name='[Calculation_336925580458364938]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([deaths])' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_46BDB128717640EA8759C0BC8995CB65]' role='measure' type='quantitative' />
      <column caption='Active Cases' datatype='integer' name='[active_cases]' role='dimension' type='ordinal' />
      <column caption='Cases' datatype='integer' name='[cases]' role='dimension' type='ordinal' />
      <column caption='Country Name' datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Deaths' datatype='integer' name='[deaths]' role='dimension' type='ordinal' />
      <column caption='Deaths Per 1M Population' datatype='integer' name='[deaths_per_1m_population]' role='dimension' type='ordinal' />
      <column caption='New Cases' datatype='integer' name='[new_cases]' role='dimension' type='ordinal' />
      <column caption='New Deaths' datatype='integer' name='[new_deaths]' role='dimension' type='ordinal' />
      <column caption='Region' datatype='integer' name='[region]' role='measure' type='quantitative' />
      <column caption='Serious Critical' datatype='integer' name='[serious_critical]' role='dimension' type='ordinal' />
      <column caption='Tests Per 1M Population' datatype='integer' name='[tests_per_1m_population]' role='dimension' type='ordinal' />
      <column caption='Total Cases Per 1M Population' datatype='integer' name='[total_cases_per_1m_population]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[total_recovered]' role='dimension' type='ordinal' />
      <column aggregation='Sum' datatype='integer' name='[total_tests]' role='dimension' type='ordinal' />
      <column-instance column='[country_name]' derivation='None' name='[none:country_name:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:country_name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Channel Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;MS Zaandam&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;USA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Western Sahara&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;French Guiana&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Micronesia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;UAE&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sint Maarten&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;DRC&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ivory Coast&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;CAR&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;UK&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Réunion&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Diamond Princess&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Saint Martin&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;St. Barth&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Caribbean Netherlands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Curaçao&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mayotte&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;S. Korea&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Vatican City&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Saint Pierre Miquelon&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;St. Vincent Grenadines&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Niue&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Turks and Caicos&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Viet Nam&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_46BDB128717640EA8759C0BC8995CB65'>
            <properties context=''>
              <relation connection='excel-direct.0el4vdm15lytsa11hfv3d04k0r43' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:M229:no:A1:M229:1' header='yes' lost='0' outcome='1' processed='2736'>
                  <column datatype='string' name='country_name' ordinal='0' />
                  <column datatype='integer' name='cases' ordinal='1' />
                  <column datatype='integer' name='deaths' ordinal='2' />
                  <column datatype='integer' name='region' ordinal='3' />
                  <column datatype='integer' name='total_recovered' ordinal='4' />
                  <column datatype='integer' name='new_deaths' ordinal='5' />
                  <column datatype='integer' name='new_cases' ordinal='6' />
                  <column datatype='integer' name='serious_critical' ordinal='7' />
                  <column datatype='integer' name='active_cases' ordinal='8' />
                  <column datatype='integer' name='total_cases_per_1m_population' ordinal='9' />
                  <column datatype='integer' name='deaths_per_1m_population' ordinal='10' />
                  <column datatype='integer' name='total_tests' ordinal='11' />
                  <column datatype='integer' name='tests_per_1m_population' ordinal='12' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Global Numbers&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (covid_data)' name='federated.0e9cz0j1edl4p417ccy1l14mh4l0' />
          </datasources>
          <datasource-dependencies datasource='federated.0e9cz0j1edl4p417ccy1l14mh4l0'>
            <column caption='Total Cases' datatype='integer' name='[Calculation_336925580457594886]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([cases])' />
            </column>
            <column caption='Total Tests' datatype='integer' name='[Calculation_336925580457943048]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([total_tests])' />
            </column>
            <column caption='Total Recovered' datatype='integer' name='[Calculation_336925580458209289]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([total_recovered])' />
            </column>
            <column caption='Total Deaths' datatype='integer' name='[Calculation_336925580458364938]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([deaths])' />
            </column>
            <column caption='Cases' datatype='integer' name='[cases]' role='dimension' type='ordinal' />
            <column caption='Deaths' datatype='integer' name='[deaths]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[total_recovered]' role='dimension' type='ordinal' />
            <column aggregation='Sum' datatype='integer' name='[total_tests]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_336925580457594886]' derivation='User' name='[usr:Calculation_336925580457594886:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_336925580457943048]' derivation='User' name='[usr:Calculation_336925580457943048:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_336925580458209289]' derivation='User' name='[usr:Calculation_336925580458209289:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_336925580458364938]' derivation='User' name='[usr:Calculation_336925580458364938:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0e9cz0j1edl4p417ccy1l14mh4l0].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0e9cz0j1edl4p417ccy1l14mh4l0].[usr:Calculation_336925580457594886:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0e9cz0j1edl4p417ccy1l14mh4l0].[usr:Calculation_336925580458364938:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0e9cz0j1edl4p417ccy1l14mh4l0].[usr:Calculation_336925580458209289:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0e9cz0j1edl4p417ccy1l14mh4l0].[usr:Calculation_336925580457943048:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0e9cz0j1edl4p417ccy1l14mh4l0].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0e9cz0j1edl4p417ccy1l14mh4l0].[:Measure Names]' value='181' />
            <format attr='font-size' data-class='subtotal' value='9' />
            <format attr='color' value='#000000' />
            <format attr='border-color' scope='cols' value='#000000' />
            <format attr='border-width' scope='cols' value='0' />
            <format attr='border-style' scope='cols' value='none' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' value='#eff3e3' />
            <format attr='background-color' scope='cols' value='#f5ead7' />
            <format attr='border-color' scope='cols' value='#000000' />
            <format attr='border-width' scope='cols' value='0' />
            <format attr='border-style' scope='cols' value='none' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' scope='cols' value='12' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' value='#f3faf9' />
            <format attr='border-color' scope='cols' value='#000000' />
            <format attr='border-width' scope='cols' value='0' />
            <format attr='border-style' scope='cols' value='none' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='10' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='stroke-size' scope='cols' value='2' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='stroke-color' scope='cols' value='#000000' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0e9cz0j1edl4p417ccy1l14mh4l0].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.0e9cz0j1edl4p417ccy1l14mh4l0].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{946F2738-F423-48C3-90FD-A15735115C08}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total Death Per Country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (covid_data)' name='federated.0e9cz0j1edl4p417ccy1l14mh4l0' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0e9cz0j1edl4p417ccy1l14mh4l0'>
            <column caption='Total Deaths' datatype='integer' name='[Calculation_336925580458364938]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([deaths])' />
            </column>
            <column caption='Country Name' datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Deaths' datatype='integer' name='[deaths]' role='dimension' type='ordinal' />
            <column-instance column='[country_name]' derivation='None' name='[none:country_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_336925580458364938]' derivation='User' name='[usr:Calculation_336925580458364938:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0e9cz0j1edl4p417ccy1l14mh4l0].[none:country_name:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='[Calculation_336925580458364938]' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:country_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.0e9cz0j1edl4p417ccy1l14mh4l0].[none:country_name:nk]' direction='DESC' using='[federated.0e9cz0j1edl4p417ccy1l14mh4l0].[usr:Calculation_336925580458364938:qk]' />
          <slices>
            <column>[federated.0e9cz0j1edl4p417ccy1l14mh4l0].[none:country_name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.0e9cz0j1edl4p417ccy1l14mh4l0].[usr:Calculation_336925580458364938:qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.0e9cz0j1edl4p417ccy1l14mh4l0].[none:country_name:nk]' value='true' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0e9cz0j1edl4p417ccy1l14mh4l0].[none:country_name:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0e9cz0j1edl4p417ccy1l14mh4l0].[usr:Calculation_336925580458364938:qk]</rows>
        <cols>[federated.0e9cz0j1edl4p417ccy1l14mh4l0].[none:country_name:nk]</cols>
      </table>
      <simple-id uuid='{0907CC6D-D3FD-42AE-B143-6E6CEA7C366C}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total Recovered per Country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (covid_data)' name='federated.0e9cz0j1edl4p417ccy1l14mh4l0' />
          </datasources>
          <datasource-dependencies datasource='federated.0e9cz0j1edl4p417ccy1l14mh4l0'>
            <column caption='Total Recovered' datatype='integer' name='[Calculation_336925580458209289]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([total_recovered])' />
            </column>
            <column caption='Country Name' datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country_name]' derivation='None' name='[none:country_name:nk]' pivot='key' type='nominal' />
            <column datatype='integer' name='[total_recovered]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_336925580458209289]' derivation='User' name='[usr:Calculation_336925580458209289:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0e9cz0j1edl4p417ccy1l14mh4l0].[none:country_name:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='[Calculation_336925580458209289]' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:country_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.0e9cz0j1edl4p417ccy1l14mh4l0].[none:country_name:nk]' direction='DESC' using='[federated.0e9cz0j1edl4p417ccy1l14mh4l0].[usr:Calculation_336925580458209289:qk]' />
          <slices>
            <column>[federated.0e9cz0j1edl4p417ccy1l14mh4l0].[none:country_name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[federated.0e9cz0j1edl4p417ccy1l14mh4l0].[none:country_name:nk]' value='58' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0e9cz0j1edl4p417ccy1l14mh4l0].[none:country_name:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0e9cz0j1edl4p417ccy1l14mh4l0].[none:country_name:nk]</rows>
        <cols>[federated.0e9cz0j1edl4p417ccy1l14mh4l0].[usr:Calculation_336925580458209289:qk]</cols>
      </table>
      <simple-id uuid='{3E5AD4F3-5338-4F9A-94DF-04EEFF99EC1F}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percent of Cases, Deaths and Recoveries in Each Country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (covid_data)' name='federated.0e9cz0j1edl4p417ccy1l14mh4l0' />
          </datasources>
          <datasource-dependencies datasource='federated.0e9cz0j1edl4p417ccy1l14mh4l0'>
            <column caption='Total Cases' datatype='integer' name='[Calculation_336925580457594886]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([cases])' />
            </column>
            <column caption='Total Recovered' datatype='integer' name='[Calculation_336925580458209289]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([total_recovered])' />
            </column>
            <column caption='Cases' datatype='integer' name='[cases]' role='dimension' type='ordinal' />
            <column caption='Country Name' datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country_name]' derivation='None' name='[none:country_name:nk]' pivot='key' type='nominal' />
            <column datatype='integer' name='[total_recovered]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_336925580457594886]' derivation='User' name='[usr:Calculation_336925580457594886:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_336925580458209289]' derivation='User' name='[usr:Calculation_336925580458209289:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='1003' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.0e9cz0j1edl4p417ccy1l14mh4l0].[usr:Calculation_336925580457594886:qk]' />
              <color column='[federated.0e9cz0j1edl4p417ccy1l14mh4l0].[none:country_name:nk]' />
              <text column='[federated.0e9cz0j1edl4p417ccy1l14mh4l0].[none:country_name:nk]' />
              <lod column='[federated.0e9cz0j1edl4p417ccy1l14mh4l0].[usr:Calculation_336925580458209289:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{6AEA9F6D-732E-40F3-B3E5-3261CE38397C}' />
    </worksheet>
    <worksheet name='Sheet 5'>
      <layout-options>
        <title>
          <formatted-text>
            <run> Sum of Deaths Per 1M Population and Sum of Total Cases Per 1M Population per Country
</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (covid_data)' name='federated.0e9cz0j1edl4p417ccy1l14mh4l0' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0e9cz0j1edl4p417ccy1l14mh4l0'>
            <column caption='Country Name' datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Deaths Per 1M Population' datatype='integer' name='[deaths_per_1m_population]' role='dimension' type='ordinal' />
            <column-instance column='[country_name]' derivation='None' name='[none:country_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[deaths_per_1m_population]' derivation='Sum' name='[sum:deaths_per_1m_population:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_cases_per_1m_population]' derivation='Sum' name='[sum:total_cases_per_1m_population:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases Per 1M Population' datatype='integer' name='[total_cases_per_1m_population]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0e9cz0j1edl4p417ccy1l14mh4l0].[Longitude (generated)]' field-type='quantitative' max='10232074.534525573' min='-8294287.4263294116' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0e9cz0j1edl4p417ccy1l14mh4l0].[Latitude (generated)]' field-type='quantitative' max='5364854.458931217' min='-838542.94110795856' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='outdoors' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.0e9cz0j1edl4p417ccy1l14mh4l0].[none:country_name:nk]' />
              <lod column='[federated.0e9cz0j1edl4p417ccy1l14mh4l0].[none:country_name:nk]' />
              <lod column='[federated.0e9cz0j1edl4p417ccy1l14mh4l0].[sum:deaths_per_1m_population:qk]' />
              <lod column='[federated.0e9cz0j1edl4p417ccy1l14mh4l0].[sum:total_cases_per_1m_population:qk]' />
              <geometry column='[federated.0e9cz0j1edl4p417ccy1l14mh4l0].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0e9cz0j1edl4p417ccy1l14mh4l0].[Latitude (generated)]</rows>
        <cols>[federated.0e9cz0j1edl4p417ccy1l14mh4l0].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{A046DC02-AFAA-44B9-8161-0543C298E7E9}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='1500' maxwidth='1705' minheight='1500' minwidth='1605' sizing-mode='range' />
      <zones>
        <zone h='100000' id='8' type-v2='layout-basic' w='100000' x='0' y='0' />
        <zone h='33333' id='7' name='Sheet 4' w='51776' x='48037' y='348' />
        <zone h='18000' id='9' name='Sheet 1' w='47040' x='62' y='200' />
        <zone h='27667' id='10' name='Sheet 2' w='47664' x='125' y='38067' />
        <zone h='27467' id='11' name='Sheet 3' w='51090' x='48723' y='38333' />
        <zone h='37933' id='12' name='Sheet 5' w='96449' x='2056' y='66533' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1450' minheight='1450' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='14' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98934' id='13' param='vert' type-v2='layout-flow' w='99004' x='498' y='533'>
                <zone fixed-size='270' h='18000' id='9' is-fixed='true' name='Sheet 1' w='47040' x='62' y='200'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='33333' id='7' is-fixed='true' name='Sheet 4' w='51776' x='48037' y='348'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='27667' id='10' is-fixed='true' name='Sheet 2' w='47664' x='125' y='38067'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='27467' id='11' is-fixed='true' name='Sheet 3' w='51090' x='48723' y='38333'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='37933' id='12' is-fixed='true' name='Sheet 5' w='96449' x='2056' y='66533'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{7FD85195-A57C-4088-8B51-C7DB0DDDDFE8}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0e9cz0j1edl4p417ccy1l14mh4l0].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F2437FB8-2DBD-4830-BD2A-0274C6D438CB}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0e9cz0j1edl4p417ccy1l14mh4l0].[none:country_name:nk]</field>
            <field>[federated.0e9cz0j1edl4p417ccy1l14mh4l0].[none:deaths:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5919F57B-0305-4A5F-8CD3-7FFBF9F963BC}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0e9cz0j1edl4p417ccy1l14mh4l0].[none:country_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1F553ACA-D239-4B57-8C00-0DAE4B29E759}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0e9cz0j1edl4p417ccy1l14mh4l0].[none:country_name:nk]</field>
            <field>[federated.0e9cz0j1edl4p417ccy1l14mh4l0].[none:new_cases:ok]</field>
            <field>[federated.0e9cz0j1edl4p417ccy1l14mh4l0].[none:new_deaths:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D01FC0D9-ABA4-4C8B-87EB-BB5766E725B5}' />
    </window>
    <window class='worksheet' name='Sheet 5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0e9cz0j1edl4p417ccy1l14mh4l0].[none:cases:ok]</field>
            <field>[federated.0e9cz0j1edl4p417ccy1l14mh4l0].[none:country_name:nk]</field>
            <field>[federated.0e9cz0j1edl4p417ccy1l14mh4l0].[none:deaths:ok]</field>
            <field>[federated.0e9cz0j1edl4p417ccy1l14mh4l0].[none:deaths_per_1m_population:ok]</field>
            <field>[federated.0e9cz0j1edl4p417ccy1l14mh4l0].[none:total_cases_per_1m_population:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{15B51CB9-DDC9-4AD9-BDB9-9879AE266D5B}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 1' />
        <viewpoint name='Sheet 2'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 3' />
        <viewpoint name='Sheet 4' />
        <viewpoint name='Sheet 5'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='8' />
      <simple-id uuid='{2E99A5D5-4D41-44B1-8F3D-B3664F43CBD6}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='48' name='Sheet 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
      Q6seAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
      bkOxanIAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 5' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
